// Author: Ben Mercier

import javax.swing.ImageIcon;

public class MonopolyGame extends javax.swing.JFrame {

    public MonopolyGame() {
        initComponents();

        this.setSize(1500, 1000);

        // sets buy and cancel button to visible false
        jButton10.setVisible(false);
        jButton11.setVisible(false);
        // sets player Money to false
        // jPanel
        jPanel2.setVisible(false);
        // Player labels
        jLabel2.setVisible(false);
        jLabel6.setVisible(false);
        jLabel7.setVisible(false);
        jLabel8.setVisible(false);
        // money textfields
        jTextField4.setVisible(false);
        jTextField5.setVisible(false);
        jTextField6.setVisible(false);
        jTextField7.setVisible(false);

        // Setting die location
        jLabel11.setVisible(false);
        jLabel1.setIcon(new ImageIcon("Dice 1.png"));
        jLabel12.setVisible(false);
        jLabel13.setVisible(false);
        jLabel14.setVisible(false);
        jLabel15.setVisible(false);
        jLabel16.setVisible(false);

        // sets roll button to visible false
        jButton1.setVisible(false);

        // sets players visible to false
        // player 1
        jLabel9.setVisible(false);
        // player 2
        jLabel17.setVisible(false);
        // Sets end turn button to visible false
        jButton2.setVisible(false);
        // Sets unused player buttons to false
        jButton7.setVisible(false);
        jButton8.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */  
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setText("Start Game");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(980, 60, 180, 40);

        jButton6.setText("2 Players");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(895, 160, 100, 23);

        jButton7.setText("3 Players");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(1030, 160, 90, 23);

        jButton8.setText("4 Players");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(1140, 160, 80, 23);

        jButton1.setText("Roll");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(380, 280, 60, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Dice");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(390, 210, 27, 19);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/Dice 1.png"))); // NOI18N
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jLabel11);
        jLabel11.setBounds(1270, 50, 50, 50);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/Dice 2.png"))); // NOI18N
        getContentPane().add(jLabel12);
        jLabel12.setBounds(1270, 110, 50, 50);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/Dice 3.png"))); // NOI18N
        getContentPane().add(jLabel13);
        jLabel13.setBounds(1270, 170, 50, 50);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/Dice 4.png"))); // NOI18N
        getContentPane().add(jLabel14);
        jLabel14.setBounds(1270, 230, 50, 50);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/Dice #5.png"))); // NOI18N
        getContentPane().add(jLabel15);
        jLabel15.setBounds(1270, 290, 50, 50);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/Dice 6.png"))); // NOI18N
        getContentPane().add(jLabel16);
        jLabel16.setBounds(1270, 350, 50, 50);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(null);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(747, 1717, 0, 0);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/Player 1.jpg"))); // NOI18N
        jPanel1.add(jLabel9);
        jLabel9.setBounds(80, 760, 50, 50);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/Player 2.jpg"))); // NOI18N
        jPanel1.add(jLabel17);
        jLabel17.setBounds(30, 710, 50, 50);

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel3.setText("Chance");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(510, 510, 62, 24);

        jTextField2.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jPanel1.add(jTextField2);
        jTextField2.setBounds(450, 630, 190, 30);

        jTextField3.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField3);
        jTextField3.setBounds(220, 630, 190, 30);

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel4.setText("Community Chest");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(240, 510, 141, 24);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Background/Monopoly GameBoard.jpg"))); // NOI18N
        jPanel1.add(jLabel10);
        jLabel10.setBounds(2, 2, 880, 880);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 880, 880);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Player Money", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField4.setText("200");

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField5.setText("200");

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField6.setText("200");

        jTextField7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField7.setText("200");

        jLabel2.setText("Player 1 (Blue)");

        jLabel6.setText("Player 2 (Red)");

        jLabel7.setText("Player 3");

        jLabel8.setText("Player 4");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(97, 97, 97)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(16, 16, 16)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(910, 250, 350, 330);

        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(1220, 830, 80, 40);

        jButton10.setText("Buy");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10);
        jButton10.setBounds(920, 610, 90, 40);

        jTextField8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField8);
        jTextField8.setBounds(1030, 610, 230, 40);

        jButton11.setText("Don't Buy");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11);
        jButton11.setBounds(920, 660, 90, 40);

        jButton2.setText("End Turn");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(920, 710, 90, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

// public die variable for storing dice number
    public static int die = 0;
    // player 1 position on board
    int pos = 0;
    // Player 2 position on board
    int pos2 = 0;
    // x coordinate
    public static int[] xC = {50, 220, 340, 470, 600, 715, 770, 770, 770, 770, 770, 590, 470, 340, 220, 35, 35, 35, 35, 35};
    // y coordinate
    public static int[] yC = {800, 800, 800, 800, 800, 825, 590, 470, 350, 230, 50, 50, 50, 50, 50, 50, 230, 350, 460, 590};
    // Peoperty array
    public static String[] prop = {"Go", "Connecticut", "Chance", "Baltic", "Community chest", "Jail", "St.charles place", "Chance", "Tennessee", "Community chest", "Go to jail", "Kentucy", "Chance", "Atlantic", "Water works", "Free parking", "Pacific", "Community chest", "Park place", "Boardwalk"};
    // the cost of property
    public static int[] price = {0, 120, 0, 60, 0, 0, 140, 0, 180, 0, 0, 220, 0, 260, 150, 0, 300, 0, 350, 400};
    // the cost of rent
    public static int[] rent = {0, 15, 0, 10, 0, 0, 18, 0, 22, 0, 0, 28, 0, 32, 18, 0, 38, 0, 44, 50};
    // who owns the property
    public static int[] owner = {-1, 0, -1, 0, -1, -1, 0, -1, 0, -1, -1, 0, -1, 0, 0, -1, 0, -1, 0, 0};
    // variable 
    public static boolean buy = false;
    // players money
    public static int money1;
    public static int money2;
    public static int money3;
    public static int money4;
    // random card variable for chance
    int randomCard;
    // random card for community chest
    int randomCard2;
    // keeps track of current player
    int currentPlayer;


    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

// Start game button
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // When start game button pushed a game starts

        // sets players starting money
        money1 = 200;
        money2 = 200;

        // sets currentPlayer to player 1
        currentPlayer = 1;
        // Select player promt
        jTextField8.setText("Select Players");

        // Start button visible false
        jButton4.setVisible(false);

    }//GEN-LAST:event_jButton4ActionPerformed

// player 2 button
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // When two players are selected the other options disappear
        jButton6.setVisible(false);
        jButton7.setVisible(false);
        jButton8.setVisible(false);
        // set jPanel to visible
        jPanel2.setVisible(true);
        // set player ladels
        jLabel2.setVisible(true);
        jLabel6.setVisible(true);
        // sets money text fields to visible
        jTextField4.setVisible(true);
        jTextField5.setVisible(true);
        // set the roll button to visible
        jButton1.setVisible(true);
        // sets players to visible
        // player 1
        jLabel9.setVisible(true);
        // player 2
        jLabel17.setVisible(true);
        // Tells Player to roll
        jTextField8.setText("Press Roll");


    }//GEN-LAST:event_jButton6ActionPerformed
// player 3 button
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // When three players are selected the other options disappear
        jButton7.setVisible(false);
        jButton6.setVisible(false);
        jButton8.setVisible(false);
        // set jPanel to visible
        jPanel2.setVisible(true);
        // set player ladels
        jLabel2.setVisible(true);
        jLabel6.setVisible(true);
        jLabel7.setVisible(true);
        // sets money text fields to visible
        jTextField4.setVisible(true);
        jTextField5.setVisible(true);
        jTextField6.setVisible(true);


    }//GEN-LAST:event_jButton7ActionPerformed
// player 4 button
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // When four players are selected the other options disappear
        jButton8.setVisible(false);
        jButton7.setVisible(false);
        jButton6.setVisible(false);
        // jPanel
        jPanel2.setVisible(true);
        // Player labels
        jLabel2.setVisible(true);
        jLabel6.setVisible(true);
        jLabel7.setVisible(true);
        jLabel8.setVisible(true);
        // money textfields
        jTextField4.setVisible(true);
        jTextField5.setVisible(true);
        jTextField6.setVisible(true);
        jTextField7.setVisible(true);

    }//GEN-LAST:event_jButton8ActionPerformed
// Dice button
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // when roll is clicked currentPlayer turn is taken
        // Generating a random number for die
        die = (int) (Math.random() * 6) + 1;

        

        // sets dice images to visible false
        jLabel11.setVisible(false);
        jLabel12.setVisible(false);
        jLabel13.setVisible(false);
        jLabel14.setVisible(false);
        jLabel15.setVisible(false);
        jLabel16.setVisible(false);

        // sets die image to appear
        if (die == 1) {

            jLabel11.setVisible(true);
            jLabel11.setBounds(380, 230, 50, 50);

        } else if (die == 2) {

            jLabel12.setVisible(true);
            jLabel12.setBounds(380, 230, 50, 50);

        } else if (die == 3) {

            jLabel13.setVisible(true);
            jLabel13.setBounds(380, 230, 50, 50);

        } else if (die == 4) {

            jLabel14.setVisible(true);
            jLabel14.setBounds(380, 230, 50, 50);

        } else if (die == 5) {

            jLabel15.setVisible(true);
            jLabel15.setBounds(380, 230, 50, 50);

        } else if (die == 6) {

            jLabel16.setVisible(true);
            jLabel16.setBounds(380, 230, 50, 50);

        }

        // player 1 turn starts
        if (currentPlayer == 1) {

                // Code for generating the players when dice is rolled
            // sets position to increase by dice roll
            pos = pos + die;

            // if one loop of board is completed
            if (pos > 19) {
                // when one loop of the board is complete resets pos
                pos = pos - 20;
                // Gives player $200 for passing GO
                money1 = money1 + 100;
                jTextField4.setText(String.valueOf(money1));
            }

            // draws player 1
            jLabel9.setBounds(xC[pos], yC[pos], 50, 50);
            
            
            // chance cards
            if (pos == 2 || pos == 7 || pos == 12) {
                    // Code for chance cards
                // Array for holding the chance cards
                String[] chanceCards = new String[5];
                // setting the chance cards
                chanceCards[0] = "Advance to GO collect $200";

                chanceCards[1] = "Bank pays you dividend of $50";

                chanceCards[2] = "Go directly to JAIL!";

                chanceCards[3] = "Pay Tax of $15";

                chanceCards[4] = "Advance to Water Works";

                // Selects random card
                randomCard = (int) (Math.random() * 5);
                // says that you arrived on chance card
                jTextField8.setText("Chance Card!");
                //Displays random chance card
                jTextField2.setText(chanceCards[randomCard]);

                // chance cards consiquences
                if (randomCard == 0) {
                    // sets position to Go
                    pos = 0;
                    // redraws player
                    jLabel9.setBounds(xC[pos], yC[pos], 50, 50);
                    // adds $200 to players bank
                    money1 = money1 + 200;
                    jTextField4.setText(String.valueOf(money1));
                } else if (randomCard == 1) {
                    // adds $50 to players bank
                    money1 = money1 + 50;
                    jTextField4.setText(String.valueOf(money1));
                } else if (randomCard == 2) {
                    //sets position to jail
                    pos = 5;
                    // redraw player 
                    jLabel9.setBounds(xC[pos], yC[pos], 50, 50);
                } else if (randomCard == 3) {
                    // subtracts $15 from players bank
                    money1 = money1 - 15;
                    jTextField4.setText(String.valueOf(money1));
                } else if (randomCard == 4) {
                    // sets players position to water works
                    pos = 14;
                    // redraws player
                    jLabel9.setBounds(xC[pos], yC[pos], 50, 50);
                }
            }

            // community chest
            if (pos == 4 || pos == 9 || pos == 17) {
                    // Code for community chest cards
                // Array for holding the community chest cards
                String[] chestCards = new String[5];
                // setting the chance cards
                chestCards[0] = "Bank Error! Collect $200";
                chestCards[1] = "Doctor's fees! Pay $50";
                chestCards[2] = "Income Tax refund collect $20";
                chestCards[3] = "You inherit $50";
                chestCards[4] = "Life insurence collect $100";

                // Selects random card
                randomCard2 = (int) (Math.random() * 5);
                // says that you arrived on chance card
                jTextField8.setText("Community Chest Card!");
                //Displays random community chest card
                jTextField3.setText(chestCards[randomCard2]);

                // community chest card consiquences
                if (randomCard2 == 0) {
                    // adds $200 to players bank
                    money1 = money1 + 200;
                    jTextField4.setText(String.valueOf(money1));
                } else if (randomCard2 == 1) {
                    // subtracts $50 from players bank
                    money1 = money1 - 50;
                    jTextField4.setText(String.valueOf(money1));
                } else if (randomCard2 == 2) {
                    // adds $20 to players bank
                    money1 = money1 + 20;
                    jTextField4.setText(String.valueOf(money1));
                } else if (randomCard2 == 3) {
                    //adds $50 to players bank
                    money1 = money1 + 50;
                    jTextField4.setText(String.valueOf(money1));
                } else if (randomCard2 == 4) {
                    // adds $100 to players bank
                    money1 = money1 + 100;
                    jTextField4.setText(String.valueOf(money1));
                }
            }
            
             // just visiting
            if (pos == 5) {
                jTextField8.setText("Just Visiting");
            }

            // Got to jail
            if (pos == 10) {
                //sets position to jail
                pos = 5;
                // redraw player 
                jLabel9.setBounds(xC[pos], yC[pos], 50, 50);
                // tells player they're in jail
                jTextField8.setText("HEY YOU! Go to Jail");

            }

           
            //Free Parking
            if (pos == 15) {
                jTextField8.setText("Free Parking");
            }

            // Code for buying properties
            if (owner[pos] == 0) {
                // checks to see if player can afford property
                if (money1 > price[pos]) {
                    // prompt player to buy
                    jTextField8.setText("Would you like to buy?");
                        // player buys property
                    // set sbuy button to be visible
                    jButton10.setVisible(true);
                    // sets cancel button to be visible
                    jButton11.setVisible(true);

                } else {
                    // prompt player they cant afford it
                    jTextField8.setText("You can't afford this property");
                }

            }

            // player has to pay rent
            if (owner[pos] != currentPlayer && owner[pos] > 0) {
                // subtracts rent from currentPlayer
                money1 = money1 - rent[pos];
                jTextField4.setText(String.valueOf(money1));
                // says you need to pay rent
                jTextField8.setText("Pay Rent!");
                // gives rent money to owner of property
                if (owner[pos] == 2) {
                    // if player 2 owns it then they get the rent
                    money2 = money2 + rent[pos];
                    jTextField5.setText(String.valueOf(money2));
                } else if (owner[pos] == 3) {
                    // if player 3 owns it then they get the rent
                    money3 = money3 + rent[pos];
                    jTextField6.setText(String.valueOf(money3));
                } else if (owner[pos] == 4) {
                    // if player 4 owns it then they get the rent
                    money4 = money4 + rent[pos];
                    jTextField7.setText(String.valueOf(money4));
                }

                if (owner[pos] == 1) {
                    jTextField8.setText("You own this property");
                }

            }

        }

        if (currentPlayer == 2) {

                // Code for generating the players when dice is rolled
            // sets position to increase by dice roll
            pos2 = pos2 + die;

            // if one loop of board is completed
            if (pos2 > 19) {
                // when one loop of the board is complete resets pos
                pos2 = pos2 - 20;
                // Gives player $200 for passing GO
                money2 = money2 + 100;
                jTextField5.setText(String.valueOf(money2));
            }
            // draws player 2
            jLabel17.setBounds(xC[pos2], yC[pos2], 50, 50);

            // chance cards
            if (pos2 == 2 || pos2 == 7 || pos2 == 12) {
                    // Code for chance cards
                // Array for holding the chance cards
                String[] chanceCards = new String[5];
                // setting the chance cards
                chanceCards[0] = "Advance to GO collect $200";

                chanceCards[1] = "Bank pays you dividend of $50";

                chanceCards[2] = "Go directly to JAIL!";

                chanceCards[3] = "Pay Tax of $15";

                chanceCards[4] = "Advance to Water Works";

                // Selects random card
                randomCard = (int) (Math.random() * 5);
                // says that you arrived on chance card
                jTextField8.setText("Chance Card!");
                //Displays random chance card
                jTextField2.setText(chanceCards[randomCard]);

                // chance cards consiquences
                if (randomCard == 0) {
                    // sets position to Go
                    pos2 = 0;
                    // redraws player
                    jLabel17.setBounds(xC[pos2], yC[pos2], 50, 50);
                    // adds $200 to players bank
                    money2 = money2 + 200;
                    jTextField5.setText(String.valueOf(money2));
                } else if (randomCard == 1) {
                    // adds $50 to players bank
                    money2 = money2 + 50;
                    jTextField5.setText(String.valueOf(money2));
                } else if (randomCard == 2) {
                    //sets position to jail
                    pos2 = 5;
                    // redraw player 
                    jLabel17.setBounds(xC[pos2], yC[pos2], 50, 50);
                } else if (randomCard == 3) {
                    // subtracts $15 from players bank
                    money2 = money2 - 15;
                    jTextField5.setText(String.valueOf(money2));
                } else if (randomCard == 4) {
                    // sets players position to water works
                    pos2 = 14;
                    // redraws player
                    jLabel17.setBounds(xC[pos2], yC[pos2], 50, 50);
                }
            }

            // community chest
            if (pos2 == 4 || pos2 == 9 || pos2 == 17) {
                    // Code for community chest cards
                // Array for holding the community chest cards
                String[] chestCards = new String[5];
                // setting the chance cards
                chestCards[0] = "Bank Error! Collect $200";
                chestCards[1] = "Doctor's fees! Pay $50";
                chestCards[2] = "Income Tax refund collect $20";
                chestCards[3] = "You inherit $50";
                chestCards[4] = "Life insurence collect $100";

                // Selects random card
                randomCard2 = (int) (Math.random() * 5);
                // says that you arrived on community chest card
                jTextField8.setText("Community Chest Card!");
                //Displays random community chest card
                jTextField3.setText(chestCards[randomCard2]);

                // community chest card consiquences
                if (randomCard2 == 0) {
                    // adds $200 to players bank
                    money2 = money2 + 200;
                    jTextField5.setText(String.valueOf(money2));
                } else if (randomCard2 == 1) {
                    // subtracts $50 from players bank
                    money2 = money2 - 50;
                    jTextField5.setText(String.valueOf(money2));
                } else if (randomCard2 == 2) {
                    // adds $20 to players bank
                    money2 = money2 + 20;
                    jTextField5.setText(String.valueOf(money2));
                } else if (randomCard2 == 3) {
                    //adds $50 to players bank
                    money2 = money2 + 50;
                    jTextField5.setText(String.valueOf(money2));
                } else if (randomCard2 == 4) {
                    // adds $100 to players bank
                    money2 = money2 + 100;
                    jTextField5.setText(String.valueOf(money2));
                }
            }
            
            // just visiting
            if (pos2 == 5) {
                jTextField8.setText("Just Visiting");
            }

            // Got to jail
            if (pos2 == 10) {
                //sets position to jail
                pos2 = 5;
                // redraw player 
                jLabel17.setBounds(xC[pos2], yC[pos2], 50, 50);
                // tells player they're in jail
                jTextField8.setText("HEY YOU! Go to Jail");

            }

            
            //Free Parking
            if (pos2 == 15) {
                jTextField8.setText("Free Parking");
            }

            // Code for buying properties
            if (owner[pos2] == 0) {
                // checks to see if player can afford property
                if (money2 > price[pos2]) {
                    // prompt player to buy
                    jTextField8.setText("Would you like to buy?");
                        // player buys property
                    // sets buy button to be visible
                    jButton10.setVisible(true);
                    // sets cancel button to be visible
                    jButton11.setVisible(true);

                } else {
                    // prompt player they cant afford it
                    jTextField8.setText("You can't afford this poroperty");
                }

            }

            // player has to pay rent
            if (owner[pos2] != currentPlayer && owner[pos2] > 0) {
                // subtracts rent from currentPlayer
                money2 = money2 - rent[pos2];
                jTextField5.setText(String.valueOf(money2));
                // says you need to pay rent
                jTextField8.setText("Pay Rent!");
                // gives rent money to owner of property
                if (owner[pos2] == 1) {
                    // if player 1 owns it then they get the rent
                    money1 = money1 + rent[pos2];
                    jTextField4.setText(String.valueOf(money1));
                } else if (owner[pos2] == 3) {
                    // if player 3 owns it then they get the rent
                    money3 = money3 + rent[pos2];
                    jTextField6.setText(String.valueOf(money3));
                } else if (owner[pos2] == 4) {
                    // if player 4 owns it then they get the rent
                    money4 = money4 + rent[pos2];
                    jTextField7.setText(String.valueOf(money4));
                }

                if (owner[pos2] == 2) {
                    jTextField8.setText("You own this property");
                }

            }

        }

        if (money1 <= 0 || money2 <= 0) {

        // Ends Game
            // sets roll button to visible false
            jButton1.setVisible(false);

        // sets players visible to false
            // player 1
            jLabel9.setVisible(false);
            // player 2
            jLabel17.setVisible(false);

            jTextField8.setText("Player " + currentPlayer + " Went bankrupt! Game Over  ");

            
        }

        // Sets end turn button to visible
        jButton2.setVisible(true);
        // sets roll button visible to false
        jButton1.setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

// Exit button
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Exits Program
        System.exit(0);
    }//GEN-LAST:event_jButton5ActionPerformed

// Game display
    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed
// Buy button
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // when button clicked buys current property
        // If player one buys a property
        if (currentPlayer == 1) {
            // subtracts money from player
            money1 = money1 - price[pos];
            jTextField4.setText(String.valueOf(money1));
            // sets owner to player
            owner[pos] = currentPlayer;
            // displays that you bought the property
            jTextField8.setText("You bought " + prop[pos]);
        } else {
            // subtracts money from player 2
            money2 = money2 - price[pos2];
            jTextField5.setText(String.valueOf(money2));
            // sets owner to player
            owner[pos2] = currentPlayer;
            // displays that you bought the property
            jTextField8.setText("You bought " + prop[pos2]);
        }
        // sets buttons back to visible false
        jButton10.setVisible(false);
        jButton11.setVisible(false);

    }//GEN-LAST:event_jButton10ActionPerformed
// cancel button
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // cancels the option to buy
        jButton10.setVisible(false);
        jButton11.setVisible(false);
    }//GEN-LAST:event_jButton11ActionPerformed
// end turn button
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        // Clears chance, community chest, and game text fields
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField8.setText("");
        //End the turn of the current player
        // if player 1 is the currentPlayer
        if (currentPlayer == 1) {
            currentPlayer = currentPlayer + 1;

        } else {
            currentPlayer = currentPlayer - 1;

        }

        // sets roll button to visible
        jButton1.setVisible(true);
        // sets button back to visible false
        jButton2.setVisible(false);

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonopolyGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonopolyGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonopolyGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonopolyGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonopolyGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
